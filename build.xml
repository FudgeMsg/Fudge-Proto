<project name="fudge-proto" default="compile">
	<property file="build.properties"/>

	<target name="parser"
		description="--> build the grammar parser">
		<exec executable="antlr3" dir="src">
			<arg value="-o" />
			<arg value="." />
			<arg value="org/fudgemsg/proto/antlr/Proto.g" />
		</exec>
	</target>

	<target name="clean-tests" depends="clean-tests-c,clean-tests-cs,clean-tests-cpp,clean-tests-default,clean-tests-java,clean-tests-proto"
		description="--> delete the output from the test scripts">
	</target>

	<target name="clean-tests-c" description="--> delete the output from C test scripts"><delete dir="${tests.dir}/out_C" /></target>
	<target name="clean-tests-cs" description="--> delete the output from C# test scripts"><delete dir="${tests.dir}/out_C#" /></target>
	<target name="clean-tests-cpp" description="--> delete the output from C++ test scripts"><delete dir="${tests.dir}/out_C++" /></target>
	<target name="clean-tests-default" description="--> delete the output from default test scripts"><delete dir="${tests.dir}/out_default" /></target>
	<target name="clean-tests-java" description="--> delete the output from Java test scripts"><delete dir="${tests.dir}/out_Java" /></target>
	<target name="clean-tests-proto" description="--> delete the output from .proto test scripts"><delete dir="${tests.dir}/out_proto" /></target>

	<target name="compile-proto-java" depends="tests"
		description="--> compile the output of the Java code generator">
                <javac	srcdir="${tests.dir}/out_Java"
                	destdir="${tests.dir}/out_Java"
                	classpathref="lib.path.id"
                	debug="${build.debug}"
                	optimize="${build.optimize}"
                	verbose="${build.verbose}"
                	listfiles="${build.listfiles}" />
	</target>

	<target name="test-proto-java" depends="compile-proto-java"
		description="--> test the output of the Java code generator">
                <mkdir dir="${tests.dir}/out_Java/xml" />
                <junit printSummary="true" fork="true" forkmode="once">
                        <classpath>
				<path refid="lib.path.id" />
				<pathelement path="${classes.dir}" />
                                <pathelement path="${tests.dir}/out_Java" />
                        </classpath>
                        <assertions>
                                <enable />
                        </assertions>
                        <formatter type="xml" />
                        <batchtest todir="${tests.dir}/out_Java/xml">
                                <fileset dir="${tests.dir}/unit_Java" includes="**/*Test.java" />
                        </batchtest>
                </junit>
                <mkdir dir="${tests.dir}/out_Java/html" />
                <junitreport todir="${tests.dir}/out_Java/xml">
                        <fileset dir="${tests.dir}/out_Java/xml" includes="TEST-*.xml" />
                        <report todir="${tests.dir}/out_Java/html" />
                </junitreport>
        </target>

	<import file="${common.dir}/common.xml"/>
</project>
